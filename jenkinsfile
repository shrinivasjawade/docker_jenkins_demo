pipeline{
	agent any
	
	environment{
		// Define environment variable for git and dockerHub creedentials
		GIT_REPOSITORY_URL = 'https://github.com/shrinivasjawade/docker_jenkins_demo.git'
		DOCKER_IMAGE_NAME = 'docker userid/docker_jenkins_demo'
		IMAGE_TAG = '1.0' // Make sure use string for tag
	}

	stage{
		stage('Clone Repositry'){ 
			// chekout the git Repository
			script{ 
				try{
					git branch: 'main', url: GIT_REPOSITORY_URL
						}catch(Exception e ){
							echo "Failed to clone repository: ${e.message}"
							error "Failed to clone repository"
						 }
					}
				 }
			
		 }

	stage('Build Docker Image'){
		steps{
			// Checkout the git repository
			script{ 
				try {
					docker.build(DOCKER_IMAGE_NAME
						 }catch (Exception e) {
							echo "Failed to build Docker image ${e.message}
							error "Failed to build Docker image
						 }
					 }
				 }
		 }

	stage("Push to DockerHub"){
		steps{
			// Log in to DockerHUb and push Docker image
			script{
				try{
					withCredentials([usernamePassword(credentialsId: "jawadeshrinivas322022",
					usernameVariable:'DOCKER_USERNAME', passwordVariable": 'DOCKER_PASSWARD' )]){
						docker.image(DOCKER_IMAGE_NAME).push(IMAGE_TAG) 

								}
						 }
					 }catch (Exception e) {
                                                        echo "Failed to build Docker image ${e.message}
                                                        error "Failed to build Docker image
                                                 }

				 }
		 }

}
